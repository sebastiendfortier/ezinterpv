if(NOT ${CMAKE_FIND_PACKAGE_NAME}_FOUND)
   set(${CMAKE_FIND_PACKAGE_NAME}_VERSION @PROJECT_VERSION@ CACHE INTERNAL "${CMAKE_FIND_PACKAGE_NAME} version")

   @PACKAGE_INIT@

   include(CMakeFindDependencyMacro)

   function(maybe_message type message)
      if(NOT ${CMAKE_FIND_PACKAGE_NAME}_FIND_QUIETLY )
         message(${type} "${message}")
      endif()
   endfunction()

   maybe_message(STATUS "Finding dependency rmn for ${CMAKE_FIND_PACKAGE_NAME}")
   find_dependency(rmn REQUIRED PATHS $ENV{rmn_DIR} ${rmn_ROOT})
   maybe_message(STATUS "Finding dependency vgrid for ${CMAKE_FIND_PACKAGE_NAME}")
   find_dependency(vgrid REQUIRED PATHS $ENV{vgrid_DIR} ${vgrid_ROOT})

   include(${CMAKE_CURRENT_LIST_DIR}/${CMAKE_FIND_PACKAGE_NAME}-targets.cmake)

   if(NOT ${CMAKE_FIND_PACKAGE_NAME}_FIND_QUIETLY )
      message(STATUS "Found ${CMAKE_FIND_PACKAGE_NAME} ${${CMAKE_FIND_PACKAGE_NAME}_VERSION} in ${PACKAGE_PREFIX_DIR}")
      if(${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
         message(STATUS "Components ${${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS}")
      endif()
      message(STATUS "Imported targets: ${CMAKE_FIND_PACKAGE_NAME}::${CMAKE_FIND_PACKAGE_NAME} libraries")
   endif()
endif()